using System;

class Program
{
    static void Main()
    {
        Console.Write("–í–≤–µ–¥—ñ—Ç—å —Å—ñ–¥-—Ñ—Ä–∞–∑—É: ");
        string seedPhrase = Console.ReadLine();

        Console.Write("–í–≤–µ–¥—ñ—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–∏–π –ø–∞—Ä–æ–ª—å: ");
        string password = Console.ReadLine();

        Console.Write("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –¥–ª—è QR-–∫–æ–¥—É (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 'seed_qr.png'): ");
        string qrFilePath = Console.ReadLine();
        
        if (string.IsNullOrWhiteSpace(qrFilePath))
        {
            qrFilePath = "seed_qr.png";
        }
        else if (!qrFilePath.EndsWith(".png", StringComparison.OrdinalIgnoreCase))
        {
            qrFilePath += ".png";
        }

        string encryptedSeed = SeedEncryptor.Encrypt(seedPhrase, password);
        Console.WriteLine($"üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞ —Å—ñ–¥-—Ñ—Ä–∞–∑–∞: {encryptedSeed}");

        QRCodeGeneratorUtil.GenerateQRCode(encryptedSeed, qrFilePath);
        Console.WriteLine($"‚úÖ QR-–∫–æ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É {qrFilePath}");
    }
}
